<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MenuStyleBtn" TargetType="Button">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Button.Width)" To="65" Duration="0:0:0.3"/>
                        <DoubleAnimation Storyboard.TargetProperty="(Button.Height)" To="65" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
                
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Button.Width)" To="50" Duration="0:0:0.3"/>
                        <DoubleAnimation Storyboard.TargetProperty="(Button.Height)" To="50" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>

            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PopupStyle" TargetType="Popup">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="VerticalOffset" Value="-30"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Placement" Value="Top"/>
        
    </Style>
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Height" Value="27"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    <Style x:Key="PopupTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ArrowPath"
           TargetType="Path">

        <Setter Property="HorizontalAlignment"
                Value="Center" />

        <Setter Property="VerticalAlignment"
                Value="Bottom" />

        <Setter Property="Data"
                Value="M0,0 L8,8 16,0 L0,0" />

        <Setter Property="Fill"
                Value="#FFFFFF" />

        <Setter Property="Height"
                Value="8" />

        <Setter Property="Width"
                Value="16" />

        <Setter Property="Stroke"
                Value="#FFFFFF" />

        <Setter Property="Stretch"
                Value="None" />

    </Style>
    <ImageBrush x:Key="close_def"
                ImageSource="/Resour/CloseBtn.png"
                Stretch="Uniform" />

    <ImageBrush x:Key="close_mo"
                ImageSource="/Resour/CloseBtn1.png"
                Stretch="Uniform" />

    <Style x:Key="CloseBtnStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="30" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Margin"
                Value="0,40,35,0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource close_def}" />

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_mo}" />

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_mo}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>


</ResourceDictionary>